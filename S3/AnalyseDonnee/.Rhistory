VVI = Mclust(faithful, modelNames = "VVI")
pnorm(120 , mean = 100,sd=15,lower.tail = FALSE)
pnorm(100 , mean = 100,sd=15,lower.tail = TRUE)
x <- 1:200
y <- dnorm(x, 100,15)
#plot(x,y,xlim=c(0,200))
#par(new = TRUE)
#abline(v = 120, col= 2)
library(ggplot2)
ggplot(data.frame(x =c(20,180)),aes(x)) + stat_function(fun=dnorm,args = c(mean=100,sd=15))+geom_vline(xintercept =120,col="pink")+geom_label(x=130,y=0.003,label = "0.1%")
data("iris")
plot(iris)
xL <- mean(iris$Sepal.Length)
sdL <- sqrt(var(iris$Sepal.Length))
x1 <- xL + 2*sdL
x2 <- xL - 2*sdL
yL <- mean(iris$Sepal.Width)
sdL <- sqrt(var(iris$Sepal.Width))
y1 <- yL + 2*sdL
y2 <- yL - 2*sdL
plot(iris$Sepal.Length,iris$Sepal.Width)
abline(v=c(x1,x2))
abline(h=c(y1,y2))
plot(iris$Petal.Width,iris$Petal.Width)
xW <- mean(iris$Sepal.Width)
sigma <- matrix(c(2,1,1,0.75), nrow = 2,ncol = 2)
y <- matrix(rnorm(2000),1000,2)%*% chol(sigma)
plot(y)
y1 <- seq(-4,4,length.out=100)
y2 <- seq(-4,4,length.out=100)
sigmainv <- solve(sigma)
a<- sigmainv[1,1]
b<- sigmainv[2,2]
c<- sigmainv[1,2]
#q <-  y1*y1*a+y2*y2*b+2*y1*y2*c
q <- outer(y1,y2,function(y1,y2)(y1*y1*a+y2*y2*b+2*y1*y2*c))
q
image(y1,y2,q)
Q <- qchisq(p = seq(0.05,0.95,by=0.1),2)
contour(y1,y2,q,col="blue",levels = Q,add=TRUE)
#1)
library(MASS)
data(crabs)
crabs
#2)
nrow(crabs)
dim(crabs)
str(crabs)
#3)
crabs_quanti <- crabs[,4:8]
crabs_quanti
#4)
colors <- c("blue","orange")
crabs$sp
col = colors[crabs$sp]
pchs <- c(20,21)
crabs$sex
pch <- pchs[crabs$sex]
pairs(crabs_quanti,col=col,pch=pch)
#5)
R <- kmeans(crabs_quanti,centers = 4)
c <- R$cluster
trueclass <- paste(crabs$sex,crabs$sp,sep = "-")
table(c,trueclass)
#6)Run the algo with 1000 different initialization and keep track of
# the within sum of squares (WSS using att withinss)
WSS <- vector(length = 1000)
for(i in 1:1000)
{
R <- kmeans(crabs_quanti,centers = 4)
WSS[i] <- sum(R$withinss)
}
hist(WSS,col="blue")
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:50),FUN = wss_f,data=c2)
plot(wss_k)
library(nnet)
data("iris")
C <- class.ind(iris$Species)
C
gaus1 <- rnorm(333,0,1)
gaus2 <- rnorm(667,4,1/2)
gaus <- c(gaus1,gaus2)
res <- kmeans(gaus,centers = 2)
Mean <- res$centers
Std <- sqrt(res$withinss/res$size)
data.frame(Mean,Std)
library(mclust)
# Une seul Variance pour tous les groups si on utilise E
clust = Mclust(gaus, modelNames = "E")
clust$parameters
clust1 = Mclust(gaus, modelNames = "V")
clust1$parameters
#Mclust with modelNames="V" can produce the best result . In addition, kmeans is a
#good way also but we should indicate clairly that how much is centers. Last, the  #result generated by Mclust with modelNames="E" is bad.
data("faithful")
faithful
plot(faithful)
# Il y a deux group de donnÃ©e
VVI = Mclust(faithful, modelNames = "VVI")
VVI$classification
VVI$parameters
#? question : qu'es ce que c'est sigmasq
plot(VVI)
plot(VVI)
VVI = Mclust(faithful, modelNames = "VVI")
VVI$classification
#? question : qu'es ce que c'est sigmasq
VVI = Mclust(faithful, modelNames = "VVI")
VVI$classification
VVI$parameters
#? question : qu'es ce que c'est sigmasq
reshc <- faithful%>%dist%>%hclust
library(dplyr)
reshc <- faithful%>%dist%>%hclust
library(dplyr)
reshc <- faithful%>%dist%>%hclust
reshc
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust
reshc <- hclust(dist(faithful),method = "ward.D2")
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
cutree(reshc,3)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
cutree(reshc,3)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
cutree(reshc,3)==VVI$classification
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification)==TRUE)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "single")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "complete")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,2)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,3)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
cutree(reshc,3)
cutree(reshc,4)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "complete")
cutree(reshc,3)
cutree(reshc,4)
sum((cutree(reshc,3)==VVI$classification))
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "VVI")
resmc3 = Mclust(faithful, G=3, modelNames = "VVI")
table(reshc2,resmc2)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "VVI")
resmc3 = Mclust(faithful, G=3, modelNames = "VVI")
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "EII")
resmc3 = Mclust(faithful, G=3, modelNames = "VVI")
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "EII")
resmc3 = Mclust(faithful, G=3, modelNames = "EII")
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "VII")
resmc3 = Mclust(faithful, G=3, modelNames = "EII")
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2, modelNames = "VII")
resmc3 = Mclust(faithful, G=3, modelNames = "EII")
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "single")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "complete")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
#library(dplyr)
#reshc <- faithful%>%dist%>%hclust(method = "ward.D2")
reshc <- hclust(dist(faithful),method = "ward.D2")
plot(reshc)
reshc2<-cutree(reshc,2)
reshc3<-cutree(reshc,3)
resmc2 = Mclust(faithful, G=2)
resmc3 = Mclust(faithful, G=3)
table(reshc2,resmc2$classification)
table(reshc3,resmc3$classification)
knitr::opts_chunk$set(echo = TRUE)
#1 centrer les donnees
center()
#1 centrer les donnees
PAC <- function(X,K = 2)
{
X <- scale(X,center = T,scale = F)
n <- nrow(X)
S <- var(X)*(n-1)/n #var(X) est sans biais (english : bias)
#ou t(X)%*%(X)/n
U <- eigen(S)$vectors
Lamabda <- eigen(S)$values
C <- X %*% U
plot(C[,1],C[,2])
}
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
#1 centrer les donnees
PAC <- function(X,K = 2)
{
X <- scale(X,center = T,scale = F)
n <- nrow(X)
S <- var(X)*(n-1)/n #var(X) est sans biais (english : bias)
#ou t(X)%*%(X)/n
U <- eigen(S)$vectors
Lamabda <- eigen(S)$values
C <- X %*% U
plot(C[,1])
}
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
#1 centrer les donnees
PAC <- function(X,K = 2)
{
X <- scale(X,center = T,scale = F)
n <- nrow(X)
S <- var(X)*(n-1)/n #var(X) est sans biais (english : bias)
#ou t(X)%*%(X)/n
U <- eigen(S)$vectors
Lamabda <- eigen(S)$values
C <- X %*% U
plot(C[,1],C[,2],C[,3])
}
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
#1 centrer les donnees
PAC <- function(X,K = 2)
{
X <- scale(X,center = T,scale = F)
n <- nrow(X)
S <- var(X)*(n-1)/n #var(X) est sans biais (english : bias)
#ou t(X)%*%(X)/n
U <- eigen(S)$vectors
Lamabda <- eigen(S)$values
C <- X %*% U
plot(C[,1],C[,3])
}
data <- data.frame(nom = c("jean", "aline","annie", "monique", "didier", "andrÃ©", "pierre", "brigitte", "evelyne"),
math = c(6.0, 8.0, 6.0, 14.5, 14, 11, 5.5, 13, 9),
scie = c(6, 8, 7, 14.5, 14, 10, 7, 12.5, 9.5),
fran = c(5, 8, 11, 15.5, 12, 5.5, 14, 8.5, 12.5),
lati = c(5.5, 8, 9.5, 15, 12.5, 7, 11.5, 9.5, 12),
d.m  = c(8, 9, 11, 8, 10, 13, 10, 12, 18)
)
X <- data.matrix(data)
PAC(X)
