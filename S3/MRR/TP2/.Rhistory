hist(WSS,col="blue")
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
cor(crabs_quanti)
#1)
library(MASS)
data(crabs)
crabs
#2)
nrow(crabs)
dim(crabs)
str(crabs)
#3)
crabs_quanti <- crabs[,4:8]
crabs_quanti
#4)
colors <- c("blue","orange")
crabs$sp
col = colors[crabs$sp]
pchs <- c(20,21)
crabs$sex
pch <- pchs[crabs$sex]
pairs(crabs_quanti,col=col,pch=pch)
#5)
R <- kmeans(crabs_quanti,centers = 4)
c <- R$cluster
trueclass <- paste(crabs$sex,crabs$sp,sep = "-")
table(c,trueclass)
#6)Run the algo with 1000 different initialization and keep track of
# the within sum of squares (WSS using att withinss)
WSS <- vector(length = 1000)
for(i in 1:1000)
{
R <- kmeans(crabs_quanti,centers = 4)
WSS[i] <- sum(R$withinss)
}
hist(WSS,col="blue")
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
cor(crabs_quanti)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
cor(crabs_quanti)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
cor(crabs_quanti)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
colMeans(cor(crabs_quanti))
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- crabs_quanti/CL
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- select(crabs_quanti,-CL)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,-CL)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select=-CL)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
c2
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_k <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
wss_k
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
wss
}
wss_k <- sapply(1:20, wss_f,data=c2)
wss_k
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
print(wss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
print(wss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
wss_k
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
print(wss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
wss <- sum(pi$withinss)
pi <- kmeans(data,k)
}
wss_k <- sapply(1:20, wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(1:20, wss_f,data=crabs_quanti)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(1:20, wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(wss_f,1:20, ,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(1:20,wss_f,c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(1:20,wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(k=1:20,wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(k=c(1:20),wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(k=c(1:20),FUN = wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X=c(1:20),FUN = wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:20),FUN = wss_f(c2))
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:20),FUN = wss_f(data=c2))
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:20),FUN = wss_f,data=c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:201),FUN = wss_f,data=c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:200),FUN = wss_f,data=c2)
nrow(c2)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:199),FUN = wss_f,data=c2)
nrow(c2)
plot(wss_k)
#7)Divide all quantitative variable by the most correlated variable to
# produce a new dataset
crabs
crabs_quanti
cor(crabs_quanti)
colMeans(cor(crabs_quanti))
c2 <- subset(crabs_quanti,select = -CL)
#8)Try to cluster the data in 1 to 20 groups. Plot the withinSS in
# function of the number of cluster  Comment the figure
wss_f <- function(data,k){
pi <- kmeans(data,k)
wss <- sum(pi$withinss)
return(wss)
}
wss_k <- sapply(X = c(1:50),FUN = wss_f,data=c2)
plot(wss_k)
data("iris")
iris
data("iris3")
iris3
data("iris3")
data("iris3")
iris3
data("iris")
iris
C <- class.ind(iris$Species)
library(nnet)
data("iris")
C <- class.ind(iris$Species)
C
